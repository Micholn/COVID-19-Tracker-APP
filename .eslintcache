[{"C:\\Users\\User\\Desktop\\covid_19_tracker\\src\\index.js":"1","C:\\Users\\User\\Desktop\\covid_19_tracker\\src\\App.js":"2","C:\\Users\\User\\Desktop\\covid_19_tracker\\src\\components\\Cards\\Cards.jsx":"3","C:\\Users\\User\\Desktop\\covid_19_tracker\\src\\components\\Chart\\Chart.jsx":"4","C:\\Users\\User\\Desktop\\covid_19_tracker\\src\\components\\CountryPicker\\CountryPicker.jsx":"5","C:\\Users\\User\\Desktop\\covid_19_tracker\\src\\components\\index.js":"6","C:\\Users\\User\\Desktop\\covid_19_tracker\\src\\api\\index.js":"7","C:\\Users\\User\\Desktop\\covid_19_tracker\\src\\components\\Cards\\Card\\Card.jsx":"8"},{"size":153,"mtime":1610043130796,"results":"9","hashOfConfig":"10"},{"size":947,"mtime":1610043078959,"results":"11","hashOfConfig":"10"},{"size":1496,"mtime":1610042577441,"results":"12","hashOfConfig":"10"},{"size":2584,"mtime":1610042717614,"results":"13","hashOfConfig":"10"},{"size":903,"mtime":1610042933850,"results":"14","hashOfConfig":"10"},{"size":177,"mtime":1610043011387,"results":"15","hashOfConfig":"10"},{"size":1409,"mtime":1610043698305,"results":"16","hashOfConfig":"10"},{"size":1012,"mtime":1610042474525,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2o5mcl",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\covid_19_tracker\\src\\index.js",[],"C:\\Users\\User\\Desktop\\covid_19_tracker\\src\\App.js",[],"C:\\Users\\User\\Desktop\\covid_19_tracker\\src\\components\\Cards\\Cards.jsx",[],["36","37"],"C:\\Users\\User\\Desktop\\covid_19_tracker\\src\\components\\Chart\\Chart.jsx",["38"],"import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchMyAPI = async () => {\r\n            const initialDailyData = await fetchDailyData();\r\n\r\n            setDailyData(initialDailyData);\r\n        };\r\n\r\n        fetchMyAPI();\r\n    }, []);\r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n            <Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [\r\n                        {\r\n                            label: 'People',\r\n                            backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                            data: [confirmed.value, recovered.value, deaths.value],\r\n                        },\r\n                    ],\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Current state in ${country}` },\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    const lineChart = (\r\n        dailyData[0] ? (\r\n            <Line\r\n                data={{\r\n                    labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\r\n                    datasets: [{\r\n                        data: dailyData.map((data) => data.confirmed),\r\n                        label: 'Infected',\r\n                        borderColor: '#3333ff',\r\n                        fill: true,\r\n                    }, {\r\n                        data: dailyData.map((data) => data.deaths),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                        fill: true,\r\n                    }, {\r\n                        data: dailyData.map((data) => data.recovered),\r\n                        label: 'Recovered',\r\n                        borderColor: 'green',\r\n                        backgroundColor: 'rgba(0, 255, 0, 0.5)',\r\n                        fill: true,\r\n                    },\r\n                    ],\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;\r\n","C:\\Users\\User\\Desktop\\covid_19_tracker\\src\\components\\CountryPicker\\CountryPicker.jsx",[],"C:\\Users\\User\\Desktop\\covid_19_tracker\\src\\components\\index.js",[],"C:\\Users\\User\\Desktop\\covid_19_tracker\\src\\api\\index.js",[],"C:\\Users\\User\\Desktop\\covid_19_tracker\\src\\components\\Cards\\Card\\Card.jsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":60,"column":46,"nodeType":"45","messageId":"46","endLine":60,"endColumn":75},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation"]